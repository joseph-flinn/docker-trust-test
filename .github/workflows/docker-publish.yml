name: Docker Build/Publish

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_REGISTRY_NAMESPACE: jflinn18
  DOCKER_CONTENT_TRUST: 1
  IMAGE_NAME: test3

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/

  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Run tests
  #       run: |
  #         if [ -f docker-compose.test.yml ]; then
  #           docker-compose --file docker-compose.test.yml build
  #           docker-compose --file docker-compose.test.yml run sut
  #         else
  #           docker build . --file Dockerfile
  #         fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    #needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_NAMESPACE --password-stdin
          echo "${{ secrets.DOCKER_DELEGATION_KEY }}" > ~/.docker/trust/private/${{ secrets.DOCKER_DELEGATION_KEY_ID }}.key
          echo "${{ secrets.DOCKER_REPO_KEY }}" > ~/.docker/trust/private/${{ secrets.DOCKER_REPO_KEY_ID }}.key
          chmod 600 ~/.docker/trust/private/${{ secrets.DOCKER_DELEGATION_KEY_ID }}.key
          chmod 600 ~/.docker/trust/private/${{ secrets.DOCKER_REPO_KEY_ID }}.key

      - name: Install and setup notary for debugging
        run: |
          wget https://github.com/theupdateframework/notary/releases/download/v0.6.1/notary-Linux-amd64
          echo PATH=$PATH
          sudo mv notary-Linux-amd64 /usr/local/bin/notary
          chmod +x /usr/local/bin/notary
          mkdir ~/.notary
          echo "{ \"trust_dir\": \"~/.docker/trust\", \"remote_server\": { \"url\": \"https://notary.docker.io\"} }" > ~/.notary/config.json

      - name: Push image
        run: |
          IMAGE_ID="$DOCKER_REGISTRY_NAMESPACE/$IMAGE_NAME"

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          echo Notary Key List
          notary key list
          echo -e "\n\n"

          #export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=${{ secrets.DOCKER_REPO_KEY_PASSPHRASE }}
          #docker trust key load ~/.docker/trust/private/${{ secrets.DOCKER_REPO_KEY_ID }}.key
          export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=${{ secrets.DOCKER_DELEGATION_KEY_PASSPHRASE }}
          #docker trust key load ~/.docker/trust/private/${{ secrets.DOCKER_DELEGATION_KEY_ID }}.key --name github

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker trust sign $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
          #docker tag $IMAGE_NAME $IMAGE_ID:unsigned
          #docker push $IMAGE_ID:unsigned
