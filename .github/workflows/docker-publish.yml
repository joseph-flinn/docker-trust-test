name: Docker Build/Publish

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_REGISTRY_NAMESPACE: jflinn18
  DOCKER_CONTENT_TRUST: 1
  IMAGE_NAME: test3

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_NAMESPACE --password-stdin
          echo "${{ secrets.DOCKER_DELEGATION_KEY }}" > ~/.docker/trust/private/$DOCKER_DELEGATION_KEY_ID.key
          echo "${{ secrets.DOCKER_REPO_KEY }}" > ~/.docker/trust/private/$DOCKER_REPO_KEY_ID.key
        env:
          DOCKER_DELEGATION_KEY_ID: bf6b710b97ef0c02c0ce315af51a6647ebec2ffc9e908d2be59f0c9001cdc084
          DOCKER_REPO_KEY_ID: 48842c4899e8d384fcf00039b2f2f381e7d00f25044c108c419087b4a07c389b

      - name: Push image
        run: |
          IMAGE_ID="$DOCKER_REGISTRY_NAMESPACE/$IMAGE_NAME"

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=${{ secrets.DOCKER_DELEGATION_KEY_PASSPHRASE }}

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker trust sign $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
